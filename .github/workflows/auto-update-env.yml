name: Create and Export Up-to-date Conda Environment

on:
  schedule:
    - cron: "0 0 * * 0"  # Runs at midnight on Sunday
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Define package list
        env:
          PACKAGES: kallisto==0.46.1, bustools==0.39.3, cellbender==0.3.0, leidenalg

      - name: Generate environment.yml
        run: |
          echo "name: mapseq_env" >> environment.yml
          echo "channels:" >> environment.yml
          echo "  - conda-forge" >> environment.yml
          echo "  - bioconda" >> environment.yml
          echo "dependencies:" >> environment.yml
          echo "  - r-base=4.3.3" >> environment.yml
          echo "  - python=3.8.19" >> environment.yml
          echo "  - pip" >> environment.yml
          echo "  - pip:" >> environment.yml
          # Loop through packages and add them to YAML with versions
          for package in ${{ env.PACKAGES }}; do
            version=$(echo "$package" | cut -d'=' -f2)  # Extract version if present
            package_name=$(echo "$package" | cut -d'=' -f1)
            if [[ $version ]]; then
              echo "  - $package_name==$version" >> environment.yml
            else
              echo "  - $package_name" >> environment.yml
            fi
          done

      - name: Create conda environment
        run: |
          conda env create -f environment.yml

      - name: Export environment.yml
        run: |
          conda env export > environment.yml

      - name: Create Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}  # Replace with your access token secret
          script: |
            const { repo, owner } = context.repo;
            const branch = `$GITHUB_REF`;
            
            const prTitle = `Automatically generated environment.yml for ${branch}`;
            
            github.rest.pulls.create({
              owner,
              repo,
              head: branch,
              base: 'main',
              title: prTitle,
              body: `This PR is auto-generated by [actions/github-script](https://github.com/actions/github-script).`
            })
            .then((data) => {
              const pullNumber = data.data.number;
              console.log(`Pull request created: #${pullNumber}`);
              return github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: pullNumber,
                labels: ['feature', 'automated PR']
              });
            })
            .catch((error) => console.error(error));
                        })
            .catch((error) => console.error(error));
